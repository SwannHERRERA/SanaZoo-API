{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://docker.zoo.nospy.fr",
      "description": "",
      "variables": {}
    }
  ],
  "info": {
    "version": "1.2",
    "title": "SanaZoo API",
    "description": "Handy Swagger to run all our zoo endpoints",
    "termsOfService": "",
    "contact": {},
    "license": {
      "name": "Nospy"
    }
  },
  "paths": {
    "/animal": {
      "get": {
        "summary": "Get all",
        "description": "Get all animals with optional\n- limit\n- offset",
        "operationId": "Getall",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Animal"
        ]
      },
      "post": {
        "summary": "Create",
        "description": "Add new animal to the zoo with given body properties",
        "operationId": "Create",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Add new animal to the zoo with given body properties",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "name": "rihanna",
                  "enclosureId": 1,
                  "specieId": 2,
                  "birthdate": "2016-08-10 14:00:54"
                }
              },
              "example": "{\n    \"name\": \"rihanna\",\n    \"enclosureId\": 1,\n    \"specieId\": 2,\n    \"birthdate\": \"2016-08-10 14:00:54\"\n}"
            }
          }
        },
        "tags": [
          "Animal"
        ]
      }
    },
    "/animal/{animalId}": {
      "get": {
        "summary": "Get by id",
        "description": "Get one specific animal by id",
        "operationId": "Getbyid",
        "parameters": [
          {
            "$ref": "#/components/parameters/animalId"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Animal"
        ]
      },
      "put": {
        "summary": "Update",
        "description": "Update animal with given body parameters",
        "operationId": "Update",
        "parameters": [
          {
            "name": "animalId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Animal ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Update animal with given body parameters",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "name": "chô7",
                  "enclosureId": 1,
                  "specieId": 1,
                  "birthdate": "2016-08-10 14:00:54"
                }
              },
              "example": "{\n    \"name\": \"chô7\",\n    \"enclosureId\": 1,\n    \"specieId\": 1,\n    \"birthdate\": \"2016-08-10 14:00:54\"\n}"
            }
          }
        },
        "tags": [
          "Animal"
        ]
      },
      "delete": {
        "summary": "Delete",
        "description": "Delete animal by id",
        "operationId": "Delete",
        "parameters": [
          {
            "name": "animalId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Animal"
        ]
      }
    },
    "/animal/{animalId}/move-enclosure/": {
      "patch": {
        "summary": "[to fix]Move Enclosure",
        "description": "Move animal to another enclosure",
        "operationId": "[tofix]MoveEnclosure",
        "parameters": [
          {
            "name": "animalId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Animal ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Move animal to another enclosure",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "animalId": 3,
                  "enclosureId": 2
                }
              },
              "example": "{\n    \"animalId\": 3,\n    \"enclosureId\": 2\n}"
            }
          }
        },
        "tags": [
          "Animal"
        ]
      }
    },
    "/animal/health": {
      "get": {
        "summary": "Get All",
        "description": "Get all animal health book entries with optional\n- limit\n- offset",
        "operationId": "GetAll",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Animal Health Book"
        ]
      },
      "post": {
        "summary": "Create entry",
        "description": "Add to an animal, a healthbook entry",
        "operationId": "Createentry",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Add to an animal, a healthbook entry",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "userId": 2,
                  "animalId": 3,
                  "date": "2021-04-04 22:58:21",
                  "description": "tout vas plus que bien"
                }
              },
              "example": "{\n    \"userId\": 2,\n    \"animalId\": 3,\n    \"date\": \"2021-04-04 22:58:21\",\n    \"description\": \"tout vas plus que bien\"\n}"
            }
          }
        },
        "tags": [
          "Animal Health Book"
        ]
      }
    },
    "/animal/health/{healthBookId}": {
      "get": {
        "summary": "Get One",
        "description": "Get one animal health book entry by id",
        "operationId": "GetOne",
        "parameters": [
          {
            "$ref": "#/components/parameters/healthBookId"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Animal Health Book"
        ]
      },
      "put": {
        "summary": "Update",
        "description": "Update a health book entry",
        "operationId": "Update4",
        "parameters": [
          {
            "name": "healthBookId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Animal health book ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Update a health book entry",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "userId": 2,
                  "animalId": 3,
                  "date": "2021-04-04 22:58:21",
                  "description": "il est mort"
                }
              },
              "example": "{\n    \"userId\": 2,\n    \"animalId\": 3,\n    \"date\": \"2021-04-04 22:58:21\",\n    \"description\": \"il est mort\"\n}"
            }
          }
        },
        "tags": [
          "Animal Health Book"
        ]
      },
      "delete": {
        "summary": "Delete",
        "description": "Remove an animal's health book entry",
        "operationId": "Delete5",
        "parameters": [
          {
            "name": "healthBookId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Animal health book ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Animal Health Book"
        ]
      }
    },
    "/animal/health/animal/{animalId}": {
      "get": {
        "summary": "[to fix] Get All By Animal",
        "description": "Get all specific animal health book entries",
        "operationId": "[tofix]GetAllByAnimal",
        "parameters": [
          {
            "name": "animalId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Animal Health Book"
        ]
      }
    },
    "/enclosure/{enclosureId}/animals": {
      "get": {
        "summary": "Get All Animals In An Enclosure",
        "description": "Retrieve all animals in specified enclosure",
        "operationId": "GetAllAnimalsInAnEnclosure",
        "parameters": [
          {
            "$ref": "#/components/parameters/enclosureId"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Enclosure"
        ]
      }
    },
    "/user/role": {
      "get": {
        "summary": "Get All",
        "description": "Get all user roles",
        "operationId": "GetAll0",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "User Role"
        ]
      },
      "post": {
        "summary": "Create",
        "description": "Create new user role",
        "operationId": "Create2",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Create new user role",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "name": "SINGE"
                }
              },
              "example": "{\n    \"name\": \"SINGE\"\n}"
            }
          }
        },
        "tags": [
          "User Role"
        ]
      }
    },
    "/user/role/{userRoleId}": {
      "get": {
        "summary": "Get by Id",
        "description": "Get one user role by id",
        "operationId": "GetbyId",
        "parameters": [
          {
            "$ref": "#/components/parameters/userRoleId"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "User Role"
        ]
      },
      "put": {
        "summary": "Update",
        "description": "Update existing user role",
        "operationId": "Update3",
        "parameters": [
          {
            "name": "userRoleId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "User Role ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Update existing user role",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "name": "Grand signe"
                }
              },
              "example": "{\n    \"name\": \"Grand signe\"\n}"
            }
          }
        },
        "tags": [
          "User Role"
        ]
      },
      "delete": {
        "summary": "Delete",
        "description": "Remove user role (keeps users with this role)",
        "operationId": "Delete4",
        "parameters": [
          {
            "name": "userRoleId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "User Role ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "User Role"
        ]
      }
    },
    "/user/role/{role-id}/affect-user/{user-id}": {
      "patch": {
        "summary": "affect User",
        "operationId": "affectUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/role-id"
          },
          {
            "$ref": "#/components/parameters/user-id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "User Role"
        ]
      }
    },
    "/user": {
      "get": {
        "summary": "[to fix] Get All",
        "description": "Get all users with optional \n- limit\n- offset",
        "operationId": "[tofix]GetAll",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "User"
        ]
      },
      "post": {
        "summary": "Create",
        "description": "Create new user with required parameters in body",
        "operationId": "Create3",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Create new user with required parameters in body",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "email": "testSinge@jungle.lol",
                  "firstName": "Singe",
                  "lastName": "Poilu",
                  "userRoleId": 2,
                  "password": "ggirigizol"
                }
              },
              "example": "{\n    \"email\": \"testSinge@jungle.lol\",\n    \"firstName\": \"Singe\",\n    \"lastName\": \"Poilu\",\n    \"userRoleId\": 2,\n    \"password\": \"ggirigizol\"\n}"
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/{userId}": {
      "get": {
        "summary": "Get By Id",
        "description": "Get one user by id",
        "operationId": "GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/userId"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "User"
        ]
      },
      "put": {
        "summary": "[to fix] Update by admin",
        "description": "### ADMIN ROUTE\n\nCan update any user",
        "operationId": "[tofix]Updatebyadmin",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "### ADMIN ROUTE\n\nCan update any user",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "id": 11,
                  "firstName": "Capsule",
                  "lastName": "Herrera",
                  "email": "capsule3@gmail.com",
                  "birthdate": "2021-01-01 12:21:51",
                  "password": "briatvmhr",
                  "userRoleId": 3
                }
              },
              "example": "{\n    \"id\": 11,\n    \"firstName\": \"Capsule\",\n    \"lastName\": \"Herrera\",\n    \"email\": \"capsule3@gmail.com\",\n    \"birthdate\": \"2021-01-01 12:21:51\",\n    \"password\": \"briatvmhr\",\n    \"userRoleId\": 3\n}"
            }
          }
        },
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "Delete",
        "description": "Soft remove user",
        "operationId": "Delete8",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/me": {
      "get": {
        "summary": "ME",
        "description": "Retrieve current connected user with beaver token given in header",
        "operationId": "ME",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login",
        "description": "Login with email and password, return bearer token if successful",
        "operationId": "Login",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Login with email and password, return bearer token if successful",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "email": "EMPLOYEE@EMPLOYEE.com",
                  "password": "azerty"
                }
              },
              "example": "{\n    \"email\": \"EMPLOYEE@EMPLOYEE.com\",\n    \"password\": \"azerty\"\n}"
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/register": {
      "post": {
        "summary": "Register",
        "description": "Register to create account with simple user role",
        "operationId": "Register",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Register to create account with simple user role",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "email": "capsule3@gmail.com",
                  "password": "azerty",
                  "firstName": "capsule",
                  "lastName": "herrera"
                }
              },
              "example": "{\n    \"email\": \"capsule3@gmail.com\",\n    \"password\": \"azerty\",\n    \"firstName\": \"capsule\",\n    \"lastName\": \"herrera\"\n}"
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/update-client/{userId}": {
      "put": {
        "summary": "[to fix] Update client only by employee",
        "description": "### Employee route\n\nCan only update client",
        "operationId": "[tofix]Updateclientonlybyemployee",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "### Employee route\n\nCan only update client",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "id": 11,
                  "firstName": "Capsule",
                  "lastName": "Herrera",
                  "email": "capsule3@gmail.com",
                  "birthdate": "2021-01-01 12:21:51",
                  "password": "shadolebest",
                  "userRoleId": 3
                }
              },
              "example": "{\n    \"id\": 11,\n    \"firstName\": \"Capsule\",\n    \"lastName\": \"Herrera\",\n    \"email\": \"capsule3@gmail.com\",\n    \"birthdate\": \"2021-01-01 12:21:51\",\n    \"password\": \"shadolebest\",\n    \"userRoleId\": 3\n}"
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/force-delete/{userId}": {
      "delete": {
        "summary": "Force Delete",
        "description": "### Admin Middleware\nRemove user from db (hard delete)",
        "operationId": "ForceDelete",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/logout": {
      "delete": {
        "summary": "Logout",
        "description": "Logout to release token session",
        "operationId": "Logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/change-password": {
      "patch": {
        "summary": "Change Password",
        "description": "Update connected user password",
        "operationId": "ChangePassword",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Update connected user password",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "actualPassword": "tytyty",
                  "newPassword": "azerty",
                  "newPasswordConfirm": "azerty"
                }
              },
              "example": "{\n    \"actualPassword\": \"tytyty\",\n    \"newPassword\": \"azerty\",\n    \"newPasswordConfirm\": \"azerty\"\n}"
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/restaure/{userId}": {
      "patch": {
        "summary": "Restaure User",
        "description": "### Admin middleware\nRestaure soft deleted user",
        "operationId": "RestaureUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/animal/specie": {
      "get": {
        "summary": "Get All",
        "description": "Get all species with optional\n- limit\n- offset",
        "operationId": "GetAll0",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Specie"
        ]
      },
      "post": {
        "summary": "Create",
        "description": "Create new specie with given parameters",
        "operationId": "Create2",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Create new specie with given parameters",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "origin": "numerique",
                  "name": "Hoglip",
                  "description": "le tem de max evo"
                }
              },
              "example": "{\n    \"origin\": \"numerique\",\n    \"name\": \"Hoglip\",\n    \"description\": \"le tem de max evo\"\n}"
            }
          }
        },
        "tags": [
          "Specie"
        ]
      }
    },
    "/animal/specie/{specieId}": {
      "get": {
        "summary": "Get By Id",
        "description": "Get one specie by ID",
        "operationId": "GetById1",
        "parameters": [
          {
            "$ref": "#/components/parameters/specieId"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Specie"
        ]
      },
      "put": {
        "summary": "Update",
        "description": "Update specie with given parameters in body",
        "operationId": "Update3",
        "parameters": [
          {
            "name": "specieId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Specie ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Update specie with given parameters in body",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "origin": "numerique",
                  "name": "oree",
                  "description": "Le tem de max no evo"
                }
              },
              "example": "{\n    \"origin\": \"numerique\",\n    \"name\": \"oree\",\n    \"description\": \"Le tem de max no evo\"\n}"
            }
          }
        },
        "tags": [
          "Specie"
        ]
      },
      "delete": {
        "summary": "Delete",
        "description": "Soft remove specie (don't delete concerned animals)",
        "operationId": "Delete4",
        "parameters": [
          {
            "name": "specieId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Specie ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Specie"
        ]
      }
    },
    "/pass/type/": {
      "get": {
        "summary": "Get all",
        "description": "Get all passType",
        "operationId": "Getall0",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Pass Type"
        ]
      },
      "put": {
        "summary": "Update",
        "description": "Update an existing Pass Type with given body values",
        "operationId": "Update4",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Update an existing Pass Type with given body values",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "id": 0,
                  "name": "new name",
                  "price": 0
                }
              },
              "example": "{\r\n    \"id\": 0,\r\n    \"name\":\"new name\",\r\n    \"price\":0\r\n    }"
            }
          }
        },
        "tags": [
          "Pass Type"
        ]
      }
    },
    "/pass/type/{passTypeId}": {
      "get": {
        "summary": "Get by id",
        "description": "Get one pass type by id",
        "operationId": "Getbyid1",
        "parameters": [
          {
            "$ref": "#/components/parameters/passTypeId"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Pass Type"
        ]
      },
      "delete": {
        "summary": "Delete",
        "description": "Delete an existing Pass Type",
        "operationId": "Delete5",
        "parameters": [
          {
            "name": "passTypeId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Pass Type Id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Pass Type"
        ]
      }
    },
    "/type/": {
      "post": {
        "summary": "Create",
        "description": "Add a new pass type",
        "operationId": "Create2",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Add a new pass type",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "name": "string",
                  "price": 0
                }
              },
              "example": "{\r\n    \"name\":\"string\",\r\n    \"price\":0\r\n}"
            }
          }
        },
        "tags": [
          "Pass Type"
        ]
      }
    },
    "/pass/type/add-pass": {
      "post": {
        "summary": "Add pass to pass type",
        "description": "Assign a Pass to an existing Pass Type",
        "operationId": "Addpasstopasstype",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Assign a Pass to an existing Pass Type",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "passId": 0,
                  "passTypeId": 0
                }
              },
              "example": "{\r\n    \"passId\": 0,\r\n    \"passTypeId\": 0\r\n}"
            }
          }
        },
        "tags": [
          "Pass Type"
        ]
      }
    },
    "/pass/entry/": {
      "get": {
        "summary": "Get all",
        "description": "Get all entries with optional\n- limit\n- offset",
        "operationId": "Getall0",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Entry"
        ]
      },
      "post": {
        "summary": "Add entry",
        "description": "Add new entry between existing Pass and Enclosure",
        "operationId": "Addentry",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Add new entry between existing Pass and Enclosure",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "passId": 0,
                  "enclosureId": 0
                }
              },
              "example": "{\r\n    \"passId\":0,\r\n    \"enclosureId\":0\r\n}"
            }
          }
        },
        "tags": [
          "Entry"
        ]
      }
    },
    "/pass/entry/user/{userId}": {
      "get": {
        "summary": "Get by user",
        "description": "Get all user entries with optional \n- limit\n- offset",
        "operationId": "Getbyuser",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Entry"
        ]
      }
    },
    "/pass/entry/pass/{passId}": {
      "get": {
        "summary": "Get by pass",
        "description": "Get all entries on a Pass with optional \n- limit\n- offset",
        "operationId": "Getbypass",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "$ref": "#/components/parameters/passId"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Entry"
        ]
      }
    },
    "/pass/entry/enclosure/{enclosureId}": {
      "get": {
        "summary": "Get by enclosure",
        "description": "Get all enclosure's entries with optional \n- limit\n- offset",
        "operationId": "Getbyenclosure",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "enclosureId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Entry"
        ]
      }
    },
    "/pass/entry/{entryId}": {
      "delete": {
        "summary": "Remove entry",
        "description": "Remove entry between existing Pass and Enclosure",
        "operationId": "Removeentry",
        "parameters": [
          {
            "$ref": "#/components/parameters/entryId"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Entry"
        ]
      }
    },
    "/pass/night/": {
      "get": {
        "summary": "Get all",
        "description": "Get all pass night with optional \n- limit\n- offset",
        "operationId": "Getall0",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Pass Night"
        ]
      },
      "post": {
        "summary": "Add availability",
        "description": "Add new pass night availability",
        "operationId": "Addavailability",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Add new pass night availability",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "date": "2021-12-31"
                }
              },
              "example": "{\r\n \"date\":\"2021-12-31\"\r\n}"
            }
          }
        },
        "tags": [
          "Pass Night"
        ]
      }
    },
    "/pass/night/available": {
      "get": {
        "summary": "Get all valid",
        "description": "Get all available pass night with optional\n- limit\n- offset",
        "operationId": "Getallvalid",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Pass Night"
        ]
      }
    },
    "/pass/night/{passNightAvailabilityId}": {
      "put": {
        "summary": "Update  passnight",
        "description": "Update a availability date for pass night",
        "operationId": "Updatepassnight",
        "parameters": [
          {
            "$ref": "#/components/parameters/passNightAvailabilityId"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Update a availability date for pass night",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "date": "2021-04-18"
                }
              },
              "example": "{\r\n    \"date\":\"2021-04-18\"\r\n}"
            }
          }
        },
        "tags": [
          "Pass Night"
        ]
      },
      "delete": {
        "summary": "Delete passnight",
        "description": "Remove a Pass Night availability",
        "operationId": "Deletepassnight",
        "parameters": [
          {
            "name": "passNightAvailabilityId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Pass Night Availability ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Pass Night"
        ]
      }
    },
    "/pass": {
      "get": {
        "summary": "Get all",
        "description": "Get all pass with optional \n- limit\n- offset",
        "operationId": "Getall0",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Pass"
        ]
      }
    },
    "/pass/user/{userId}": {
      "get": {
        "summary": "Get all by user id",
        "description": "Get all user pass",
        "operationId": "Getallbyuserid",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Pass"
        ]
      }
    },
    "/pass/{passId}": {
      "get": {
        "summary": "Get by id",
        "description": "Get a specific pass by given ID with \n- all it's enclosure access\n- all it's enclosure entries",
        "operationId": "Getbyid2",
        "parameters": [
          {
            "name": "passId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Pass ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Pass"
        ]
      },
      "delete": {
        "summary": "Delete pass",
        "description": "Delete a pass",
        "operationId": "Deletepass",
        "parameters": [
          {
            "name": "passId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Pass ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Pass"
        ]
      },
      "put": {
        "summary": "Update pass",
        "description": "Update a pass\n\nOnly Type is updatable by this endpoint.",
        "operationId": "Updatepass",
        "parameters": [
          {
            "name": "passId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Pass ID\n"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Update a pass\n\nOnly Type is updatable by this endpoint.",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "passTypeId": 4
                }
              },
              "example": "{\r\n    \"passTypeId\":4\r\n}"
            }
          }
        },
        "tags": [
          "Pass"
        ]
      }
    },
    "/pass/": {
      "post": {
        "summary": "Create",
        "description": "Create a new pass with enclosure access list",
        "operationId": "Create4",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Create a new pass with enclosure access list",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "validDate": "2021-12-31",
                  "userId": 0,
                  "passTypeId": 0,
                  "enclosureAccessList": [
                    0
                  ]
                }
              },
              "example": "{\r\n    \"validDate\":\"2021-12-31\",\r\n    \"userId\":0,\r\n    \"passTypeId\":0,\r\n    \"enclosureAccessList\":[\r\n        0\r\n    ]\r\n}"
            }
          }
        },
        "tags": [
          "Pass"
        ]
      }
    },
    "/pass/enclosure-access": {
      "post": {
        "summary": "Add enclosure access",
        "description": "Add to an existing pass enclosure access",
        "operationId": "Addenclosureaccess",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "requestBody": {
          "description": "Add to an existing pass enclosure access",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": {
                  "enclosureId": 0,
                  "passId": 0
                }
              },
              "example": "{\r\n    \"enclosureId\":0,\r\n    \"passId\":0\r\n}"
            }
          }
        },
        "tags": [
          "Pass"
        ]
      }
    },
    "/pass/enclosure-access/{passId}/{enclosureId}": {
      "delete": {
        "summary": "Remove enclosure access",
        "description": "Remove to an existing pass an enclosure access",
        "operationId": "Removeenclosureaccess",
        "parameters": [
          {
            "name": "passId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Pass ID"
          },
          {
            "name": "enclosureId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Enclosure ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Pass"
        ]
      }
    },
    "/monitoring/affluence/daily": {
      "get": {
        "summary": "Daily",
        "description": "Get for given day daily affluence",
        "operationId": "Daily",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Affluence"
        ]
      }
    },
    "/monitoring/affluence/daily/{enclosureId}": {
      "get": {
        "summary": "Daily by enclosure",
        "description": "Get for given day and enclosure daily affluence",
        "operationId": "Dailybyenclosure",
        "parameters": [
          {
            "name": "enclosureId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Enclosure ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Affluence"
        ]
      }
    },
    "/monitoring/affluence/weekly": {
      "get": {
        "summary": "Weekly",
        "description": "Get current week total affluence",
        "operationId": "Weekly",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Affluence"
        ]
      }
    },
    "/monitoring/affluence/weekly/{enclosureId}": {
      "get": {
        "summary": "Weekly by enclosure",
        "description": "Get current week enclosure total affluence",
        "operationId": "Weeklybyenclosure",
        "parameters": [
          {
            "name": "enclosureId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Enclosure ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Affluence"
        ]
      }
    },
    "/monitoring/affluence/monthly/{month}": {
      "get": {
        "summary": "Monthly",
        "description": "Get given month total affluence\n\nIf month parameter invalid or empty, it will return for current month",
        "operationId": "Monthly",
        "parameters": [
          {
            "$ref": "#/components/parameters/month"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Affluence"
        ]
      }
    },
    "/monitoring/affluence/monthly-enclosure/{enclosureId}/{month}": {
      "get": {
        "summary": "Monthly by enclosure",
        "description": "Get given month enclosure's total affluence\n\nIf month parameter invalid or empty, it will return for current month",
        "operationId": "Monthlybyenclosure",
        "parameters": [
          {
            "name": "enclosureId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Enclosure ID"
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Month number (1-12)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Affluence"
        ]
      }
    },
    "/monitoring/affluence/yearly/{year}": {
      "get": {
        "summary": "Yearly",
        "description": "Get yearly affluence with details per month.\n\nIf year invalid or empty, return for current year",
        "operationId": "Yearly",
        "parameters": [
          {
            "$ref": "#/components/parameters/year"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Affluence"
        ]
      }
    },
    "/monitoring/affluence/yearly-enclosure/{enclosureId}/{year}": {
      "get": {
        "summary": "Yearly by enclosure",
        "description": "Get yearly enclosure's affluence with details per month.\n\nIf year invalid or empty, return for current year",
        "operationId": "Yearlybyenclosure",
        "parameters": [
          {
            "name": "enclosureId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Enclosure ID"
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Year"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Affluence"
        ]
      }
    },
    "/monitoring/affluence/total": {
      "get": {
        "summary": "Total",
        "description": "Get total affluence of the ZOO since it's creation",
        "operationId": "Total",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Affluence"
        ]
      }
    },
    "/monitoring/affluence/total/{enclosureId}": {
      "get": {
        "summary": "Total by enclosure",
        "description": "Get total enclosure's affluence of the ZOO since it's creation",
        "operationId": "Totalbyenclosure",
        "parameters": [
          {
            "name": "enclosureId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Enclosure ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Affluence"
        ]
      }
    },
    "/monitoring/affluence/live/{enclosureId}": {
      "get": {
        "summary": "Live enclosure affluence",
        "description": "Get live enclosure affluence",
        "operationId": "Liveenclosureaffluence",
        "parameters": [
          {
            "name": "enclosureId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Enclosure ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Affluence"
        ]
      }
    },
    "/monitoring/statistic/count/user": {
      "get": {
        "summary": "Count user",
        "description": "Count total of active users",
        "operationId": "Countuser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Statistics"
        ]
      }
    },
    "/monitoring/statistic/count/enclosure": {
      "get": {
        "summary": "Count enclosure",
        "description": "Count total of enclosures",
        "operationId": "Countenclosure",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Statistics"
        ]
      }
    },
    "/monitoring/statistic/count/animal/": {
      "get": {
        "summary": "Count animal",
        "description": "Count total of animals",
        "operationId": "Countanimal",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Statistics"
        ]
      }
    },
    "/monitoring/statistic/count/animal/{enclosureId}": {
      "get": {
        "summary": "Count animal by enclosure",
        "description": "Count total of enclosure's animals",
        "operationId": "Countanimalbyenclosure",
        "parameters": [
          {
            "name": "enclosureId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number"
            },
            "description": "Enclosure ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Statistics"
        ]
      }
    },
    "/monitoring/statistic/count/pass/valid/": {
      "get": {
        "summary": "Count valid pass",
        "description": "Count total of valid pass",
        "operationId": "Countvalidpass",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Statistics"
        ]
      }
    },
    "/monitoring/statistic/count/pass/valid/types": {
      "get": {
        "summary": "Count valid pass by types",
        "description": "Count total of valid pass by types",
        "operationId": "Countvalidpassbytypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Statistics"
        ]
      }
    },
    "/monitoring/statistic/count/pass/expired": {
      "get": {
        "summary": "Count expired pass",
        "description": "Count total of expired pass",
        "operationId": "Countexpiredpass",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Statistics"
        ]
      }
    },
    "/monitoring/statistic/count/pass/": {
      "get": {
        "summary": "Count all pass",
        "description": "Count total of both valid or expired pass",
        "operationId": "Countallpass",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Statistics"
        ]
      }
    },
    "/monitoring/statistic/count/pass/types": {
      "get": {
        "summary": "Count all pass by types",
        "description": "Count total of both valid or expired pass by types",
        "operationId": "Countallpassbytypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Statistics"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "limit": {
        "name": "limit",
        "in": "query",
        "required": true,
        "style": "form",
        "schema": {
          "type": "number"
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "required": true,
        "style": "form",
        "schema": {
          "type": "number"
        }
      },
      "animalId": {
        "name": "animalId",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        },
        "description": "Animal ID"
      },
      "healthBookId": {
        "name": "healthBookId",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        },
        "description": "Animal health book id"
      },
      "enclosureId": {
        "name": "enclosureId",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        },
        "description": "Enclosure ID"
      },
      "userRoleId": {
        "name": "userRoleId",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        },
        "description": "User Role ID"
      },
      "role-id": {
        "name": "role-id",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        }
      },
      "user-id": {
        "name": "user-id",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        }
      },
      "userId": {
        "name": "userId",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        }
      },
      "specieId": {
        "name": "specieId",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        },
        "description": "Specie ID"
      },
      "passTypeId": {
        "name": "passTypeId",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        },
        "description": "Pass Type Id"
      },
      "passId": {
        "name": "passId",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        },
        "description": "Pass ID"
      },
      "entryId": {
        "name": "entryId",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        }
      },
      "passNightAvailabilityId": {
        "name": "passNightAvailabilityId",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        },
        "description": "Pass Night Availability ID"
      },
      "month": {
        "name": "month",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        },
        "description": "Month number (1-12)"
      },
      "year": {
        "name": "year",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "number"
        },
        "description": "Year"
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ],
  "tags": [],
  "externalDocs": {
    "url": "",
    "description": ""
  }
}